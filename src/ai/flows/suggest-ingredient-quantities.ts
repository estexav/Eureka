// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Suggests ingredient quantities for new recipes based on current stock levels.
 *
 * - suggestIngredientQuantities - A function that suggests ingredient quantities.
 * - SuggestIngredientQuantitiesInput - The input type for the suggestIngredientQuantities function.
 * - SuggestIngredientQuantitiesOutput - The return type for the suggestIngredientQuantities function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestIngredientQuantitiesInputSchema = z.object({
  recipeName: z.string().describe('The name of the recipe.'),
  ingredients: z
    .array(z.object({
      name: z.string().describe('The name of the ingredient.'),
      currentStock: z.number().describe('The current stock level of the ingredient.'),
    }))
    .describe('A list of ingredients with their current stock levels.'),
});

export type SuggestIngredientQuantitiesInput = z.infer<
  typeof SuggestIngredientQuantitiesInputSchema
>;

const SuggestIngredientQuantitiesOutputSchema = z.object({
  suggestedQuantities: z
    .array(z.object({
      name: z.string().describe('The name of the ingredient.'),
      suggestedQuantity: z.number().describe('The suggested quantity of the ingredient.'),
      reason: z.string().describe('The reason for the suggested quantity.'),
    }))
    .describe('A list of ingredients with their suggested quantities and reasons.'),
});

export type SuggestIngredientQuantitiesOutput = z.infer<
  typeof SuggestIngredientQuantitiesOutputSchema
>;

export async function suggestIngredientQuantities(
  input: SuggestIngredientQuantitiesInput
): Promise<SuggestIngredientQuantitiesOutput> {
  return suggestIngredientQuantitiesFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestIngredientQuantitiesPrompt',
  input: {schema: SuggestIngredientQuantitiesInputSchema},
  output: {schema: SuggestIngredientQuantitiesOutputSchema},
  prompt: `You are an expert baker, and I need you to suggest ingredient quantities for new recipes based on current stock levels.

Recipe Name: {{recipeName}}

Ingredients and Stock Levels:
{{#each ingredients}}
- {{name}}: {{currentStock}}
{{/each}}

Please suggest ingredient quantities for this recipe, taking into account the current stock levels of each ingredient. 
If an ingredient is low, suggest a lower quantity, and explain why.
Be concise and specific with the quantities. Return a reason for each suggested quantity.
`,
});

const suggestIngredientQuantitiesFlow = ai.defineFlow(
  {
    name: 'suggestIngredientQuantitiesFlow',
    inputSchema: SuggestIngredientQuantitiesInputSchema,
    outputSchema: SuggestIngredientQuantitiesOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
